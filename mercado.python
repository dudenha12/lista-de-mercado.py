class Supermercado:
    def __init__(self):
        self.catalogo = {
            1: {'produto': 'Batata Bem Brasil Hash Brown/1,06kg', 'preço': 11.10},
            2: {'produto': 'Ketchup Hemmer Tradicional/1kg', 'preço': 30.45},
            3: {'produto': 'Maionese Hemmer Tradicional/1g', 'preço': 16.80},
            4: {'produto': 'Mostarda Amarela Hemmer/1g', 'preço': 19.00},
            5: {'produto': 'Arroz Branco/5kg', 'preço': 30.00},
            6: {'produto': 'Biscoito Princesa Sortido/400g', 'preço': 29.80},
            7: {'produto': 'Biscoito de Manteiga Doce Magia Hansen/300g', 'preço': 12.90},
            8: {'produto': 'Coca Cola Original/2l', 'preço': 11.00},
            9: {'produto': 'Coca Cola Original lata/350ml', 'preço': 4.00},
            10: {'produto': 'Coca Cola Zero lata/350ml', 'preço': 3.50},
            11: {'produto': 'Pão de Queijo Grande/cada', 'preço': 1.00}
        }
        self.carrinho = {}
        self.total = 0.0

    def boas_vindas(self):
        print('Bem-vindo ao Mercado Dudão!')
        print('Você pode escolher os produtos do nosso catálogo a seguir.')

    def atualizar_total(self):
        """Atualiza o total da compra baseado no carrinho."""
        self.total = sum(self.catalogo[codigo]['preço'] * quantidade
                         for codigo, quantidade in self.carrinho.items())

    def adicionar_produto(self, codigo, quantidade):
        if codigo in self.catalogo:
            if codigo in self.carrinho:
                self.carrinho[codigo] += quantidade
            else:
                self.carrinho[codigo] = quantidade
            self.atualizar_total()
            print(f'{quantidade} unidade(s) de {self.catalogo[codigo]["produto"]} adicionada(s) ao carrinho.')
        else:
            print('Produto não encontrado no catálogo.')

    def remover_produto(self, codigo, quantidade):
        if codigo in self.carrinho:
            if quantidade >= self.carrinho[codigo]:
                del self.carrinho[codigo]
                print(f'{self.catalogo[codigo]["produto"]} removido do carrinho.')
            else:
                self.carrinho[codigo] -= quantidade
                print(f'{quantidade} unidade(s) de {self.catalogo[codigo]["produto"]} removida(s) do carrinho.')
            self.atualizar_total()
        else:
            print('Produto não encontrado no carrinho.')

    def resumir_compra(self):
        print('\nResumo da compra:')
        for codigo, quantidade in self.carrinho.items():
            produto = self.catalogo[codigo]["produto"]
            preco_unitario = self.catalogo[codigo]["preço"]
            preco_total = preco_unitario * quantidade
            print(f'{quantidade} unidade(s) de {produto} - R${preco_total:.2f}')
        print(f'Total da compra - R${self.total:.2f}')

    def pagar(self):
        while True:
            self.resumir_compra()

            print('\nEscolha uma opção:')
            print('1 - Pagar')
            print('2 - Alterar carrinho')
            print('3 - Cancelar compra')

            escolha = input('Digite a opção desejada: ').strip().lower()

            if escolha == '3':
                print('Compra cancelada.')
                self.carrinho = {}
                self.total = 0.0
                return

            elif escolha == '1':
                while True:
                    pagamento = input('Digite o valor recebido pelo cliente: ')
                    try:
                        valor_pago = float(pagamento)
                        troco = valor_pago - self.total

                        if troco < 0:
                            print(f'Valor insuficiente. Faltam R${-troco:.2f}.')
                        else:
                            if troco > 0:
                                print(f'Troco: R${troco:.2f}')

                            print('\nDeseja informar o CPF na nota?')
                            print('Digite "Sim" para informar o CPF ou "Não" para não informar.')

                            cpf_opcao = input('Escolha uma opção: ').strip().lower()
                            if cpf_opcao == 'não':
                                cpf_info = 'CPF: Não informado'
                            elif cpf_opcao == 'sim':
                                cpf = input('Digite o CPF: ').strip()
                                cpf_info = f'CPF: {cpf}'
                            else:
                                print('Opção inválida. Considerando CPF não informado.')
                                cpf_info = 'CPF: Não informado'

                            print('\nNota Fiscal:')
                            print(f'Total da compra - R${self.total:.2f}')
                            print(cpf_info)
                            print('Compra concluída')

                            import datetime
                            data_atual = datetime.date.today()
                            data = data_atual.strftime("%d/%m/%Y")

                            with open("notafiscal.txt", "a") as arquivo:
                                arquivo.write(f'Data: {data}\n')
                                arquivo.write(f'{cpf_info}\n')
                                arquivo.write('Resumo da compra:\n')
                                for codigo, quantidade in self.carrinho.items():
                                    produto = self.catalogo[codigo]["produto"]
                                    preco_unitario = self.catalogo[codigo]["preço"]
                                    preco_total = preco_unitario * quantidade
                                    arquivo.write(f'{quantidade} unidade(s) de {produto} - R${preco_total:.2f}\n')
                                arquivo.write(f'Total da compra: R${self.total:.2f}\n\n')

                            self.carrinho = {}
                            self.total = 0.0
                            return

                    except ValueError:
                        print('Valor inválido. Digite um número válido.')

            elif escolha == '2':
                while True:
                    print('\nEscolha uma opção:')
                    print('1 - Adicionar produto ao carrinho')
                    print('2 - Remover produto do carrinho')
                    print('3 - Voltar para o menu de pagamento')

                    opcao_alterar = input('Digite a opção desejada: ').strip().lower()
                    if opcao_alterar == '1':
                        codigo = int(input('Digite o código do produto: '))
                        quantidade = int(input('Digite a quantidade desejada: '))
                        self.adicionar_produto(codigo, quantidade)
                    elif opcao_alterar == '2':
                        codigo = int(input('Digite o código do produto a remover: '))
                        quantidade = int(input('Digite a quantidade a remover: '))
                        self.remover_produto(codigo, quantidade)
                    elif opcao_alterar == '3':
                        break
                    else:
                        print('Opção inválida. Tente novamente.')

            else:
                print('Opção inválida. Digite "1" para pagar, "2" para alterar o carrinho ou "3" para cancelar a compra.')

    def comprar(self):
        self.boas_vindas()
        while True:
            print('\nCatálogo de produtos:')
            for codigo, detalhes in self.catalogo.items():
                print(f'{codigo} - {detalhes["produto"]} - R${detalhes["preço"]:.2f}')

            print('\nEscolha uma opção:')
            print('1 - Adicionar produto ao carrinho')
            print('2 - Remover produto do carrinho')
            print('3 - Finalizar compra')
            print('4 - Entrar como administrador')
            print('Digite "sair" para encerrar o programa.')

            escolha = input('Digite a opção desejada: ').strip().lower()

            if escolha == 'sair':
                break
            elif escolha == '1':
                codigo = int(input('Digite o código do produto: '))
                quantidade = int(input('Digite a quantidade desejada: '))
                self.adicionar_produto(codigo, quantidade)
            elif escolha == '2':
                codigo = int(input('Digite o código do produto a remover: '))
                quantidade = int(input('Digite a quantidade a remover: '))
                self.remover_produto(codigo, quantidade)
            elif escolha == '3':
                self.pagar()
            elif escolha == '4':
                self.entrar_admin()  # Entrar no painel de administração
            else:
                print('Opção inválida. Tente novamente.')

    def entrar_admin(self):
        email = input("Digite o email do administrador: ")
        senha = input("Digite a senha do administrador: ")
        
        if email == "admin@gmail.com" and senha == "admin":
            print("Login efetuado com sucesso!")
            while True:
                print("1. Adicionar produto ao catálogo")
                print("2. Remover produto do catálogo")
                print("3. Ver histórico de compras dos clientes")
                print("4. Sair do painel de administração")
                
                opcao = input("Digite a opção desejada: ")
                
                if opcao == "1":
                    self.adicionar_produto_admin()
                elif opcao == "2":
                    self.remover_produto_admin()
                elif opcao == "3":
                    self.ver_historico_compras()
                elif opcao == "4":
                    print("Saindo do painel de administração. Voltando ao menu principal.")
                    break
                else:
                    print("Opção inválida. Tente novamente.")
        else:
            print("Email ou senha incorretos. Tente novamente.")

    def adicionar_produto_admin(self):
        nome_produto = input("Digite o nome do produto: ")
        preco_produto = float(input("Digite o preço do produto: "))
        codigo = max(self.catalogo.keys(), default=0) + 1
        
        self.catalogo[codigo] = {
            'produto': nome_produto,
            'preço': preco_produto
        }
        
        with open("catalogo.txt", "a") as arquivo:
            arquivo.write(f'{codigo} - {nome_produto} - R${preco_produto:.2f}\n')
        
        print("Produto adicionado ao catálogo com sucesso!")

    def remover_produto_admin(self):
        codigo = int(input("Digite o código do produto a ser removido: "))
        
        if codigo in self.catalogo:
            del self.catalogo[codigo]
            
            with open("catalogo.txt", "w") as arquivo:
                for cod, detalhes in self.catalogo.items():
                    arquivo.write(f'{cod} - {detalhes["produto"]} - R${detalhes["preço"]:.2f}\n')
            
            print("Produto removido do catálogo com sucesso!")
        else:
            print("Código de produto não encontrado no catálogo.")

    def ver_historico_compras(self):
        try:
            with open("notafiscal.txt", "r") as arquivo:
                print(arquivo.read())
        except FileNotFoundError:
            print("Arquivo de histórico de compras não encontrado. Nenhuma compra realizada.")

if __name__ == "__main__":
    mercado = Supermercado()
    mercado.comprar()


